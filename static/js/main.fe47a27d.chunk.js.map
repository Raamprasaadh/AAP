{"version":3,"sources":["images/Plates.jpg","images/Different_Sizes.jpg","images/Different_Sizes2.jpeg","pages/Nav_Bar.js","pages/Home_Page.js","pages/Products.js","pages/Contact.js","pages/About.js","App.js","ServiceWorker.js","index.js"],"names":["module","exports","NavBar","className","onClick","window","location","reload","exact","to","process","Component","HomePage","src","Plates","alt","VariousSizes","VariousSizes2","Products","key","Contact","About","App","basename","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","ServiceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,+C,oOCuB5BC,G,6KAdP,OACI,yBAAKC,UAAU,UACX,kBAAC,IAAD,KACA,4BACI,wBAAIC,QAAS,WAAKC,OAAOC,SAASC,QAAO,KAAU,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAIC,SAAnB,SACnD,wBAAIN,QAAS,WAAKC,OAAOC,SAASC,QAAO,KAAU,kBAAC,IAAD,CAASE,GAAIC,iBAAb,aACnD,wBAAIN,QAAS,WAAKC,OAAOC,SAASC,QAAO,KAAU,kBAAC,IAAD,CAASE,GAAIC,gBAAb,eACnD,wBAAIN,QAAS,WAAKC,OAAOC,SAASC,QAAO,KAAU,kBAAC,IAAD,CAASE,GAAIC,cAAb,oB,GATlDC,c,mECuBNC,E,uKAnBX,OACI,kBAAC,WAAD,KACA,6BACI,yBAAKC,IAAOC,IAAQC,IAAK,QACzB,uBAAGZ,UAAU,UAAb,WAEJ,6BACI,yBAAKU,IAAOG,IAAcD,IAAK,QAC/B,uBAAGZ,UAAU,UAAb,kBAEJ,6BACI,yBAAKU,IAAOI,IAAeF,IAAK,QAChC,uBAAGZ,UAAU,UAAb,uB,GAdWQ,aCFR,SAASO,IAEpB,OACI,yBAAKf,UAAU,aACX,yCAGA,4BACA,4BAAK,QACL,4BAAK,SACL,4BAAK,mBAEL,wBAAIgB,IAAK,GACN,4BAAK,GACL,4BAAK,yBAAKN,IAAOC,IAAQC,IAAM,SAC/B,4BAAK,oBCnBL,SAASK,IACpB,OACI,yBAAKjB,UAAU,aACX,gDAA4B,6BAC5B,oDAAgC,6BAChC,qDAAiC,6BACjC,yDAAqC,6BAErC,6BACA,6BACA,wDAAoC,6BACpC,oDAAgC,6BAChC,qDAAiC,6BACjC,yDAAqC,6BAErC,6BACA,6BAEA,sDAAkC,6BAClC,wDAAoC,6BACpC,qDAAiC,6BACjC,oEAAgD,8B,ICE7CkB,E,uKArBP,OACI,yBAAKlB,UAAU,aACf,0CAAmB,6BACnB,kYACA,6BACA,6BAEA,sCAAe,6BACf,yLACA,6BACA,6BAEA,uCAAgB,6BAChB,2YACA,6BACA,kC,GAjBQQ,a,MC2BLW,MAlBf,WACE,OACE,kBAAC,IAAD,CAAeC,SAAUb,QACzB,yBAAKP,UAAU,OACZ,kBAAE,EAAF,MACD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOK,OAAK,EAACgB,KAAK,IAAIC,UAAab,IACnC,kBAAC,IAAD,CAAOJ,OAAK,EAACgB,KAAK,YAAYC,UAAaP,IAC3C,kBAAC,IAAD,CAAOV,OAAK,EAACgB,KAAK,WAAWC,UAAaL,IAC1C,kBAAC,IAAD,CAAOZ,OAAK,EAACgB,KAAK,SAASC,UAAaJ,QCT5BK,QACW,cAA7BrB,OAAOC,SAASqB,UAEe,UAA7BtB,OAAOC,SAASqB,UAEhBtB,OAAOC,SAASqB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.fe47a27d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Plates.0fa8a452.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Different_Sizes.fec88628.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Different_Sizes2.a83fa9fc.jpeg\";","//Purpose of the file : to display the NavBar and help user to navigate through the page.\r\n//ToDo add Logo\r\n//check why it is not loading pages without location.reload\r\nimport React, { Component } from 'react';\r\nimport {BrowserRouter, NavLink} from 'react-router-dom';\r\n\r\nimport '../css/style.css';\r\nclass NavBar extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"navBar\">\r\n                <BrowserRouter>\r\n                <ul>\r\n                    <li onClick={()=>{window.location.reload(false);}}><NavLink exact to={process.env.PUBLIC_URL +\"/\"}>Home</NavLink></li>\r\n                    <li onClick={()=>{window.location.reload(false);}}><NavLink to={process.env.PUBLIC_URL +\"/products\"}>Products</NavLink></li>\r\n                    <li onClick={()=>{window.location.reload(false);}}><NavLink to={process.env.PUBLIC_URL +\"/contact\"}>Contact Us</NavLink></li>\r\n                    <li onClick={()=>{window.location.reload(false);}}><NavLink to={process.env.PUBLIC_URL +\"/about\"}>About Us</NavLink></li>\r\n                </ul>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default NavBar;","//Purpose of the file : To display the home page carousal.\r\nimport React, {Component} from 'react';\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Plates from \"../images/Plates.jpg\";\r\nimport VariousSizes from \"../images/Different_Sizes.jpg\";\r\nimport VariousSizes2 from \"../images/Different_Sizes2.jpeg\";\r\n\r\nclass HomePage extends Component{\r\n    render(){\r\n    return(\r\n        <Carousel>\r\n        <div>\r\n            <img src = {Plates} alt =\"404\"/>\r\n            <p className=\"legend\">Plates</p>\r\n        </div>\r\n        <div>\r\n            <img src = {VariousSizes} alt =\"404\"/>\r\n            <p className=\"legend\">Various Sizes</p>\r\n        </div>\r\n        <div>\r\n            <img src = {VariousSizes2} alt =\"404\"/>\r\n            <p className=\"legend\">Various Sizes</p>\r\n        </div>\r\n        </Carousel>\r\n    )\r\n    }\r\n}\r\n\r\nexport default HomePage;","/*\r\nPurpose of the file : To display List of products\r\nand its details such as width height and gsm.\r\n*/\r\nimport React from 'react';\r\n\r\nimport Plates from '../images/Plates.jpg';\r\nexport default function Products()\r\n{\r\n    return(\r\n        <div className='Container'>\r\n            <h1>\r\n                Products.\r\n            </h1>\r\n            <th>\r\n            <td>{\"S.no\"}</td>\r\n            <td>{\"Image\"}</td>\r\n            <td>{\"Specifications\"}</td>\r\n            </th>\r\n            <tr key={1}>\r\n               <td>{1}</td>\r\n               <td>{<img src = {Plates} alt = \"404\"/>}</td>\r\n               <td>{\"Specifications\"}</td>\r\n            </tr>\r\n        </div>\r\n    )\r\n}","//Purpose of the file : To display Contact details and location if possible a map.\r\nimport React from 'react';\r\n\r\nexport default function Contact(){\r\n    return(\r\n        <div className='Container'>\r\n            <label>Name : Anand </label><br></br>\r\n            <label>Designation : CEO</label><br></br>\r\n            <label>Phone : 9876543210</label><br></br>\r\n            <label>Email : mail@gmail.com</label><br></br>\r\n\r\n            <br></br>\r\n            <br></br>\r\n            <label>Name : Gowri Shankar </label><br></br>\r\n            <label>Designation : CEO</label><br></br>\r\n            <label>Phone : 8610901900</label><br></br>\r\n            <label>Email : mail@gmail.com</label><br></br>\r\n\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <label>Name : Ram prasadh </label><br></br>\r\n            <label>Designation : Manager</label><br></br>\r\n            <label>Phone : 7418836123</label><br></br>\r\n            <label>Email : ramprasadhsurya@gmail.com</label><br></br>\r\n        </div>\r\n    )\r\n}","//Purpose of the file : To display Details about the company.\r\nimport React, { Component } from 'react'\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Container\">\r\n            <h2>What we do</h2><br></br>\r\n            <p>We at \"Abirami Areca Plates\" aim to reduce the impact on our environment by creating and promoting Areca Leaf products which are being produced with sustainable resource(made from fallen leaves - 100 % natural) through Eco friendly process(no chemicals or additives used) and make sure it is acceptable to Earth when disposed(biodegradable & compostable).</p >\r\n            <br></br>\r\n            <br></br>\r\n            \r\n            <h2>VISION</h2><br></br>\r\n            <p>To be a world class, leading eco-friendly product manufacturer who makes our customers, employees, suppliers, shareholders, society and environment smile.</p>\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <h2>MISSION</h2><br></br>\r\n            <p>We are committed to be a highly creative and socially responsible eco-friendly product manufacturer, by delighting our customers with our responsive attitude, by introducing innovative products with superior quality & reliability at an affordable cost and by enhancing the organization's abilities to compete in the global market with minimal environmental impact.</p>\r\n            <br></br>\r\n            <br></br>\r\n        </div >\r\n    )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport NavBar from './pages/Nav_Bar';\nimport HomePage from './pages/Home_Page';\nimport Products from './pages/Products';\nimport Contact from './pages/Contact';\nimport About from './pages/About';\n\n//import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <div className=\"App\">\n       < NavBar />\n      <Switch>\n        <Route exact path='/' component = {HomePage}/>\n        <Route exact path='/products' component = {Products}/>\n        <Route exact path='/contact' component = {Contact}/>\n        <Route exact path='/about' component = {About}/>\n        </Switch>\n              \n    </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'ServiceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.ServiceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.ServiceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.ServiceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.ServiceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('ServiceWorker' in navigator) {\n    navigator.ServiceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Index.css';\nimport App from './App';\nimport * as ServiceWorker from './ServiceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nServiceWorker.unregister();\n"],"sourceRoot":""}